/* Photoshop Text CSS Export	* By Justin Marsan - www.justinmarsan.com	* Infos and help : http://lab.justinmarsan.com/textparser/	* Version 1.0.0*/apppath = app.activeDocument.path;app.bringToFront();var embody = prompt("Size of the body font-size (in px)","14");var y = 0;var z = 0;var w = 0;var f = 0;var text_array = new Array();function browseLayers(obj){	for(var x = 0; x < obj.layers.length; x++){		var curGroup = obj.layers[x];		if(curGroup.typename == "LayerSet" && curGroup.visible){			z++;			y = y + curGroup.artLayers.length;			getTextLayers(curGroup);						if(curGroup.layerSets.length > 0){				z = z + curGroup.layerSets.length;				browseLayers (curGroup);				}			}		else if(curGroup.typename == "ArtLayer" && curGroup.visible){				y++;				}		}	getTextLayers(obj);	}function getTextLayers(obj){	f++;	for(var x = 0; x < obj.layers.length;x++){		var curLayer = obj.layers[x];				if(curLayer.kind == "LayerKind.TEXT" && curLayer.visible){			w++;			var curArray = new Array();			curArray['name'] = 'text_'+w;			curArray['calque'] = curLayer.name;			curArray['content'] = curLayer.textItem.contents;			curArray['color'] = curLayer.textItem.color.rgb.hexValue;			curArray['size'] = curLayer.textItem.size.value;			curArray['justification'] = curLayer.textItem.justification;			curArray['font'] = curLayer.textItem.font;			curArray['capital'] = curLayer.textItem.capitalization;			curArray['underline'] = curLayer.textItem.underline;			curArray['tracking'] = curLayer.textItem.tracking;			curArray['italic'] = curLayer.textItem.fauxItalic;			curArray['bold'] = curLayer.textItem.fauxBold;			try {                curArray['leading'] = curLayer.textItem.leading.value;                }            catch(e) {                curArray['leading'] = curArray['size']*1.4;                }			if(!entryExists (curArray)){				text_array.push(curArray);				}			}		}	}function entryExists(obj){	for(var i =0;i < text_array.length;i++){		if(text_array[i]['color'] == obj['color'] &&			text_array[i]['size'] == obj['size'] &&			text_array[i]['justification'] == obj['justification'] &&			text_array[i]['font'] == obj['font'] &&			text_array[i]['capital'] == obj['capital'] &&			 text_array[i]['tracking'] == obj['tracking'] &&			 text_array[i]['italic'] == obj['italic'] &&			 text_array[i]['bold'] == obj['bold'] &&			 text_array[i]['leading'] == obj['leading']		){			return true;			}		}	return false;	}function renderCss(){	var css = "/* TextParser v1.0.0 */ \n";	css+="/* http://lab.justinmarsan.com/textparser */ \n";	css+='body {\nfont-size:'+embody+'px;\n}\n\n';	for(var k = 0;k<text_array.length;k++){		css+='.'+text_array[k]['name']+' {\n';		css+='/*Exemple : '+text_array[k]['content'].slice(0,50)+'*/\n';		if(text_array[k]['content'] != text_array[k]['calque']){			css+='/*Layer : '+text_array[k]['calque']+'*/\n';		}		css+='font:';		if(text_array[k]['italic']) {			css+='italic ';		}		if(text_array[k]['capital'] == "TextCase.SMALLCAPS"){			css+='small-caps ';		}		if(text_array[k]['bold']) {			css+='bold ';		}		css+=Math.round(text_array[k]['size']/embody*1000)/1000+'em/'+Math.round(text_array[k]['leading']/text_array[k]['size']*1000)/1000+'em ';		css+='"'+text_array[k]['font']+'",sans-serif; \n';		css+='color:#'+text_array[k]['color']+';\n';		if(text_array[k]['capital'] == "TextCase.ALLCAPS"){			css+='text-transform:uppercase;\n';		}		if(text_array[k]['underline'] != "UnderlineType.UNDERLINEOFF"){			css+='text-decoration:underline;\n';		}		if(text_array[k]['tracking'] != 0) {			css+='letter-spacing:'+text_array[k]['tracking']/1000+'em; /* OR '+Math.round(text_array[k]['size']*text_array[k]['tracking']/1000)+'px */\n';		}		css+='}\n';	}	var fileOut = new File(app.activeDocument.path+'/'+app.activeDocument.name+'.css');	fileOut.open('w');	fileOut.write(css);	}if(apppath){	browseLayers (app.activeDocument);	renderCss();}else {	alert('Your file must be saved first.');}alert('Your css file have been created');